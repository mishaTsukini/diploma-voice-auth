name: CI/CD Pipeline with Security Scans

on:
  push:
    branches:
      - '*'  # Build and push images on all branch pushes, including security checks
    tags:
      - 'v*'  # Deploy when version tags are pushed

jobs:
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  

      - name: Install Python security dependencies
        run: |
          pip install bandit safety

      - name: Run Bandit security scan (Python backend)
        run: bandit -r ./backend  

      - name: Run Safety check (Python backend)
        run: safety check -r ./backend/requirements.txt 
      
      - name: Set up Node for JavaScript
        uses: actions/setup-node@v2
        with:
          node-version: '14' 
      
      - name: Install npm dependencies (Frontend)
        run: |
          cd frontend
          npm install
      
      - name: Run ESLint security scan (JavaScript frontend)
        run: |
          cd frontend
          npx eslint . --ext .js,.jsx,.ts,.tsx  # Adjust extensions as needed

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image (frontend)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-diploma-gzigangirov:latest,${{ secrets.DOCKERHUB_USERNAME }}/frontend-diploma-gzigangirov:${{ github.sha }}


      - name: Build and push Docker image (backend)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-diploma-gzigangirov:latest,${{ secrets.DOCKERHUB_USERNAME }}/backend-diploma-gzigangirov:${{ github.sha }}

      
  deploy:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy using Docker Compose
        run: |
          ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
            docker-compose pull
            docker-compose up -d
          EOF
